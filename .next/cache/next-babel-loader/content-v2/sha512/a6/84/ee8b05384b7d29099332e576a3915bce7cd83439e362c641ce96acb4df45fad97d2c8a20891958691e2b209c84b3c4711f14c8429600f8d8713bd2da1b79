{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/sindyme/\\xC1rea de Trabalho/mypodcast_nlw05/src/pages/_app.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Header } from '../components/Header/index';\nimport { GlobalStyle } from '../styles/global';\nimport { Wrapper } from '../styles/app';\nimport { Player } from '../components/Player';\nimport { PlayerContext } from '../contexts/PlayerContext';\nimport { useState } from 'react';\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  const {\n    0: episodeList,\n    1: setEpisodeList\n  } = useState([]);\n  const {\n    0: currentEpisodeIndex,\n    1: setCurrentEpisodeIndex\n  } = useState(0);\n  const {\n    0: isPlaying,\n    1: setIsPlaying\n  } = useState(false);\n\n  function play(episode) {\n    setEpisodeList([episode]);\n    setCurrentEpisodeIndex(0);\n    setIsPlaying(true);\n  }\n\n  function togglePlay() {\n    setIsPlaying(!isPlaying);\n  }\n\n  function setPlayingState(state) {\n    setIsPlaying(state);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(PlayerContext.Provider, {\n      value: {\n        episodeList,\n        currentEpisodeIndex,\n        play,\n        isPlaying,\n        togglePlay,\n        setPlayingState\n      },\n      children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n        children: [/*#__PURE__*/_jsxDEV(\"main\", {\n          children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Player, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\nexport default MyApp;","map":{"version":3,"sources":["/home/sindyme/Área de Trabalho/mypodcast_nlw05/src/pages/_app.tsx"],"names":["Header","GlobalStyle","Wrapper","Player","PlayerContext","useState","MyApp","Component","pageProps","episodeList","setEpisodeList","currentEpisodeIndex","setCurrentEpisodeIndex","isPlaying","setIsPlaying","play","episode","togglePlay","setPlayingState","state"],"mappings":";;;;;;;;;;AAAA,SAAQA,MAAR,QAAqB,4BAArB;AAEA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,SAAQC,OAAR,QAAsB,eAAtB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAGA,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAyC;AAEvC,QAAM;AAAA,OAAEC,WAAF;AAAA,OAAeC;AAAf,MAAkCL,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM;AAAA,OAAEM,mBAAF;AAAA,OAAuBC;AAAvB,MAAkDP,QAAQ,CAAC,CAAD,CAAhE;AACA,QAAM;AAAA,OAAEQ,SAAF;AAAA,OAAaC;AAAb,MAA8BT,QAAQ,CAAC,KAAD,CAA5C;;AAEA,WAASU,IAAT,CAAcC,OAAd,EAAuB;AACrBN,IAAAA,cAAc,CAAC,CAACM,OAAD,CAAD,CAAd;AACAJ,IAAAA,sBAAsB,CAAC,CAAD,CAAtB;AACAE,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;;AAED,WAASG,UAAT,GAAsB;AACpBH,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD;;AAED,WAASK,eAAT,CAAyBC,KAAzB,EAAyC;AACvCL,IAAAA,YAAY,CAACK,KAAD,CAAZ;AACD;;AAED,sBACE;AAAA,2BACA,QAAC,aAAD,CAAe,QAAf;AAAwB,MAAA,KAAK,EAAE;AAACV,QAAAA,WAAD;AAC7BE,QAAAA,mBAD6B;AAE7BI,QAAAA,IAF6B;AAG7BF,QAAAA,SAH6B;AAI7BI,QAAAA,UAJ6B;AAK7BC,QAAAA;AAL6B,OAA/B;AAAA,8BASA,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cATA,eAUA,QAAC,OAAD;AAAA,gCACE;AAAA,kCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,SAAD,oBAAeV,SAAf;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADF;AA2BD;;AAED,eAAeF,KAAf","sourcesContent":["import {Header} from '../components/Header/index'\n\nimport {GlobalStyle} from '../styles/global';\nimport {Wrapper} from '../styles/app';\nimport { Player } from '../components/Player';\nimport { PlayerContext } from '../contexts/PlayerContext';\nimport { useState } from 'react';\n\n\nfunction MyApp({ Component, pageProps }) {\n\n  const [ episodeList, setEpisodeList ] = useState([]);\n  const [ currentEpisodeIndex, setCurrentEpisodeIndex ] = useState(0);\n  const [ isPlaying, setIsPlaying ] = useState(false)\n\n  function play(episode) {\n    setEpisodeList([episode]);\n    setCurrentEpisodeIndex(0);\n    setIsPlaying(true)\n  }\n\n  function togglePlay() {\n    setIsPlaying(!isPlaying)\n  }\n\n  function setPlayingState(state: boolean) {\n    setIsPlaying(state)\n  }\n\n  return (\n    <>\n    <PlayerContext.Provider value={{episodeList, \n      currentEpisodeIndex, \n      play, \n      isPlaying, \n      togglePlay,\n      setPlayingState\n      }}>\n\n    \n    <GlobalStyle/>\n    <Wrapper>\n      <main>\n        <Header/>\n        <Component {...pageProps} />\n      </main>\n      <Player/>\n        \n        \n    </Wrapper>\n    </PlayerContext.Provider>\n  </>\n   \n  )\n \n\n}\n\nexport default MyApp\n"]},"metadata":{},"sourceType":"module"}