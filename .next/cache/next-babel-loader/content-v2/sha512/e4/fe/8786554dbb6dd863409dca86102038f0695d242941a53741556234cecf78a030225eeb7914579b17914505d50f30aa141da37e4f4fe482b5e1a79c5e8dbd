{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/sindyme/\\xC1rea de Trabalho/mypodcast_nlw05/src/pages/episodes/[slug].tsx\";\nimport { format, parseISO } from 'date-fns';\nimport { ptBR } from 'date-fns/locale';\nimport { useRouter } from 'next/router';\nimport { api } from '../../services/api';\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\nexport default function Episode({\n  episode\n}) {\n  const router = useRouter();\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: episode.id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\nexport const getStaticProps = async ctx => {\n  const {\n    slug\n  } = ctx.params;\n  const {\n    data\n  } = await api.get(`/episodes/${slug}`);\n  const episode = {\n    id: data.id,\n    title: data.title,\n    members: data.members,\n    publishedAt: format(parseISO(data.published_at), 'd MMM yy', {\n      locale: ptBR\n    }),\n    thumbnail: data.thumbnail,\n    duration: Number(data.file.duration),\n    description: data.description,\n    url: data.file.url,\n    durationAsString: convertDurationToTimeString(Number(data.file.duration))\n  };\n  return {\n    props: episode,\n    revalidate: 60 * 60 * 24\n  };\n};","map":{"version":3,"sources":["/home/sindyme/√Årea de Trabalho/mypodcast_nlw05/src/pages/episodes/[slug].tsx"],"names":["format","parseISO","ptBR","useRouter","api","convertDurationToTimeString","Episode","episode","router","id","getStaticProps","ctx","slug","params","data","get","title","members","publishedAt","published_at","locale","thumbnail","duration","Number","file","description","url","durationAsString","props","revalidate"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,UAAjC;AACA,SAASC,IAAT,QAAqB,iBAArB;AAEA,SAAQC,SAAR,QAAyB,aAAzB;AACA,SAASC,GAAT,QAAoB,oBAApB;AACA,SAASC,2BAAT,QAA4C,yCAA5C;AAgBA,eAAe,SAASC,OAAT,CAAiB;AAACC,EAAAA;AAAD,CAAjB,EAAyC;AAEpD,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,sBACI;AAAA,cAAKI,OAAO,CAACE;AAAb;AAAA;AAAA;AAAA;AAAA,UADJ;AAIH;AAED,OAAO,MAAMC,cAA8B,GAAG,MAAMC,GAAN,IAAe;AACzD,QAAM;AAACC,IAAAA;AAAD,MAASD,GAAG,CAACE,MAAnB;AAEA,QAAM;AAACC,IAAAA;AAAD,MAAS,MAAMV,GAAG,CAACW,GAAJ,CAAS,aAAYH,IAAK,EAA1B,CAArB;AAEA,QAAML,OAAO,GACb;AACIE,IAAAA,EAAE,EAAEK,IAAI,CAACL,EADb;AAEIO,IAAAA,KAAK,EAAEF,IAAI,CAACE,KAFhB;AAGIC,IAAAA,OAAO,EAAEH,IAAI,CAACG,OAHlB;AAIIC,IAAAA,WAAW,EAAElB,MAAM,CAACC,QAAQ,CAACa,IAAI,CAACK,YAAN,CAAT,EAA8B,UAA9B,EAA0C;AAACC,MAAAA,MAAM,EAAElB;AAAT,KAA1C,CAJvB;AAKImB,IAAAA,SAAS,EAAEP,IAAI,CAACO,SALpB;AAMIC,IAAAA,QAAQ,EAAEC,MAAM,CAACT,IAAI,CAACU,IAAL,CAAUF,QAAX,CANpB;AAOIG,IAAAA,WAAW,EAAEX,IAAI,CAACW,WAPtB;AAQIC,IAAAA,GAAG,EAAEZ,IAAI,CAACU,IAAL,CAAUE,GARnB;AASIC,IAAAA,gBAAgB,EAAEtB,2BAA2B,CAACkB,MAAM,CAACT,IAAI,CAACU,IAAL,CAAUF,QAAX,CAAP;AATjD,GADA;AAcA,SAAO;AACHM,IAAAA,KAAK,EAAErB,OADJ;AAEHsB,IAAAA,UAAU,EAAE,KAAG,EAAH,GAAM;AAFf,GAAP;AAIH,CAvBM","sourcesContent":["import { format, parseISO } from 'date-fns';\nimport { ptBR } from 'date-fns/locale';\nimport { GetStaticProps } from 'next';\nimport {useRouter}  from 'next/router'\nimport { api } from '../../services/api';\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\n\ninterface Episode  {\n    id: string;     \n    title: string;\n    members: string;\n    publishedAt: string;\n    thumbnail: string;\n    duration: number;\n    url: string;\n    durationAsString: string;\n  }\n  interface EpisodeProps  {\n    episode: Episode\n  }\n\nexport default function Episode({episode}:EpisodeProps) {\n\n    const router = useRouter();\n    return (\n        <h1>{episode.id}</h1>\n\n    );\n}\n\nexport const getStaticProps: GetStaticProps = async(ctx) =>  {\n    const {slug} = ctx.params;\n\n    const {data} = await api.get(`/episodes/${slug}`)\n\n    const episode = \n    {\n        id: data.id,      \n        title: data.title,\n        members: data.members,\n        publishedAt: format(parseISO(data.published_at), 'd MMM yy', {locale: ptBR}),\n        thumbnail: data.thumbnail,\n        duration: Number(data.file.duration),\n        description: data.description,\n        url: data.file.url,\n        durationAsString: convertDurationToTimeString(Number(data.file.duration))\n      }\n\n\n    return {\n        props: episode,\n        revalidate: 60*60*24\n    }\n}"]},"metadata":{},"sourceType":"module"}