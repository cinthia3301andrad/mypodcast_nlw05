{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/sindyme/\\xC1rea de Trabalho/mypodcast_nlw05/src/pages/index.tsx\";\nexport var __N_SSG = true;\nexport default function Home(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.episodes[0].members\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n} //com \"const NomeDaFunção: Tipagem = () => {}\" conseguimos tipar os parametros da função e seu retorno\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/sindyme/Área de Trabalho/mypodcast_nlw05/src/pages/index.tsx"],"names":["Home","props","episodes","members"],"mappings":";;;AAeA,eAAe,SAASA,IAAT,CAAcC,KAAd,EAAgC;AAE7C,sBACE;AAAA,cACCA,KAAK,CAACC,QAAN,CAAe,CAAf,EAAkBC;AADnB;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,C,CAED;;KAVwBH,I","sourcesContent":["import {GetStaticProps} from 'next';\n\nimport { format, parseISO } from 'date-fns'\nimport { api } from '../services/api';\n\n\ninterface Episode  {\n  id: string;\n  title: string;\n  members: string;\n}\ninterface HomeProps  {\n  episodes: Array<Episode>;\n}\n\nexport default function Home(props: HomeProps) {\n  \n  return (\n    <div>\n    {props.episodes[0].members}\n     \n    </div>\n  )\n}\n\n//com \"const NomeDaFunção: Tipagem = () => {}\" conseguimos tipar os parametros da função e seu retorno\nexport const getStaticProps: GetStaticProps = async() =>  {\n  const {data} = await api.get('episodes', {\n    params: {\n      _limit: 12,\n      _sort: 'published_at',\n      _order: 'desc'\n    }\n  });\n\n  const episodes = data.map(episode => {\n    return {\n      id: episode.id,      \n      title: episode.title,\n      members: episode.members,\n      published_at: format(parseISO(episode.published_at), 'd MMM yy'),\n      thumbnail: episode.thumbnail,\n      file: {\n        url: episode.file.url,\n        type: episode.file.type,\n        duration: episode.file.duration,\n      }\n    }\n  })\n  \n  return {\n    props: {\n      episodes: data,\n    },\n    revalidate: 60*60*8,\n  }\n  \n}"]},"metadata":{},"sourceType":"module"}