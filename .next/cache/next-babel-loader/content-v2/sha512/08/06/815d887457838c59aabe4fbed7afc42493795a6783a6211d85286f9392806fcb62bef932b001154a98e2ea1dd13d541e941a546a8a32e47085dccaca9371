{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/sindyme/\\xC1rea de Trabalho/mypodcast_nlw05/src/pages/index.tsx\";\nimport { format, parseISO } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport { api } from '../services/api';\nimport { convertDurationToTimeString } from '../utils/convertDurationToTimeString';\nimport { ContainerHome, LatestEpisodes } from './stylesHome';\nexport default function Home(props) {\n  return /*#__PURE__*/_jsxDEV(ContainerHome, {\n    children: /*#__PURE__*/_jsxDEV(LatestEpisodes, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n} //com \"const NomeDaFunção: Tipagem = () => {}\" conseguimos tipar os parametros da função e seu retorno\n\nexport const getStaticProps = async () => {\n  const {\n    data\n  } = await api.get('episodes', {\n    params: {\n      _limit: 12,\n      _sort: 'published_at',\n      _order: 'desc'\n    }\n  });\n  const episodes = data.map(episode => {\n    return {\n      id: episode.id,\n      title: episode.title,\n      members: episode.members,\n      publishedAt: format(parseISO(episode.published_at), 'd MMM yy', {\n        locale: ptBR\n      }),\n      thumbnail: episode.thumbnail,\n      duration: Number(episode.file.duration),\n      description: episode.description,\n      url: episode.file.url,\n      durationAsString: convertDurationToTimeString(Number(episode.file.duration))\n    };\n  });\n  return {\n    props: {\n      episodes: episodes\n    },\n    revalidate: 60 * 60 * 8\n  };\n};","map":{"version":3,"sources":["/home/sindyme/Área de Trabalho/mypodcast_nlw05/src/pages/index.tsx"],"names":["format","parseISO","ptBR","api","convertDurationToTimeString","ContainerHome","LatestEpisodes","Home","props","getStaticProps","data","get","params","_limit","_sort","_order","episodes","map","episode","id","title","members","publishedAt","published_at","locale","thumbnail","duration","Number","file","description","url","durationAsString","revalidate"],"mappings":";;AAEA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,UAAjC;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SAASC,GAAT,QAAoB,iBAApB;AAEA,SAASC,2BAAT,QAA4C,sCAA5C;AACA,SAAQC,aAAR,EAAuBC,cAAvB,QAAyD,cAAzD;AAkBA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAgC;AAE7C,sBACE,QAAC,aAAD;AAAA,2BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,C,CAED;;AACA,OAAO,MAAMC,cAA8B,GAAG,YAAY;AACxD,QAAM;AAACC,IAAAA;AAAD,MAAS,MAAMP,GAAG,CAACQ,GAAJ,CAAQ,UAAR,EAAoB;AACvCC,IAAAA,MAAM,EAAE;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,KAAK,EAAE,cAFD;AAGNC,MAAAA,MAAM,EAAE;AAHF;AAD+B,GAApB,CAArB;AAQA,QAAMC,QAAQ,GAAGN,IAAI,CAACO,GAAL,CAASC,OAAO,IAAI;AACnC,WAAO;AACLC,MAAAA,EAAE,EAAED,OAAO,CAACC,EADP;AAELC,MAAAA,KAAK,EAAEF,OAAO,CAACE,KAFV;AAGLC,MAAAA,OAAO,EAAEH,OAAO,CAACG,OAHZ;AAILC,MAAAA,WAAW,EAAEtB,MAAM,CAACC,QAAQ,CAACiB,OAAO,CAACK,YAAT,CAAT,EAAiC,UAAjC,EAA6C;AAACC,QAAAA,MAAM,EAAEtB;AAAT,OAA7C,CAJd;AAKLuB,MAAAA,SAAS,EAAEP,OAAO,CAACO,SALd;AAMLC,MAAAA,QAAQ,EAAEC,MAAM,CAACT,OAAO,CAACU,IAAR,CAAaF,QAAd,CANX;AAOLG,MAAAA,WAAW,EAAEX,OAAO,CAACW,WAPhB;AAQLC,MAAAA,GAAG,EAAEZ,OAAO,CAACU,IAAR,CAAaE,GARb;AASLC,MAAAA,gBAAgB,EAAE3B,2BAA2B,CAACuB,MAAM,CAACT,OAAO,CAACU,IAAR,CAAaF,QAAd,CAAP;AATxC,KAAP;AAWD,GAZgB,CAAjB;AAcA,SAAO;AACLlB,IAAAA,KAAK,EAAE;AACLQ,MAAAA,QAAQ,EAAEA;AADL,KADF;AAILgB,IAAAA,UAAU,EAAE,KAAG,EAAH,GAAM;AAJb,GAAP;AAOD,CA9BM","sourcesContent":["import {GetStaticProps} from 'next';\n\nimport { format, parseISO } from 'date-fns'\nimport ptBR from 'date-fns/locale/pt-BR'\nimport { api } from '../services/api';\n\nimport { convertDurationToTimeString } from '../utils/convertDurationToTimeString';\nimport {ContainerHome, LatestEpisodes, AllEpisodes} from './stylesHome'\n\n\ninterface Episode  {\n  id: string;     \n  title: string;\n  members: string;\n  publishedAt: string;\n  thumbnail: string;\n  duration: number;\n  description: string;\n  url: string;\n  durationAsString: string;\n}\ninterface HomeProps  {\n  episodes: Array<Episode>;\n}\n\nexport default function Home(props: HomeProps) {\n  \n  return (\n    <ContainerHome>\n      <LatestEpisodes>\n\n      </LatestEpisodes>\n    </ContainerHome>\n  )\n}\n\n//com \"const NomeDaFunção: Tipagem = () => {}\" conseguimos tipar os parametros da função e seu retorno\nexport const getStaticProps: GetStaticProps = async() =>  {\n  const {data} = await api.get('episodes', {\n    params: {\n      _limit: 12,\n      _sort: 'published_at',\n      _order: 'desc'\n    }\n  });\n\n  const episodes = data.map(episode => {\n    return {\n      id: episode.id,      \n      title: episode.title,\n      members: episode.members,\n      publishedAt: format(parseISO(episode.published_at), 'd MMM yy', {locale: ptBR}),\n      thumbnail: episode.thumbnail,\n      duration: Number(episode.file.duration),\n      description: episode.description,\n      url: episode.file.url,\n      durationAsString: convertDurationToTimeString(Number(episode.file.duration))\n    }\n  })\n  \n  return {\n    props: {\n      episodes: episodes,\n    },\n    revalidate: 60*60*8,\n  }\n  \n}"]},"metadata":{},"sourceType":"module"}