{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/sindyme/\\xC1rea de Trabalho/mypodcast_nlw05/src/pages/index.tsx\";\nimport Image from 'next/image';\nimport { ContainerHome, LatestEpisodes, AllEpisodes } from './stylesHome';\nexport var __N_SSG = true;\nexport default function Home(_ref) {\n  var _this = this;\n\n  var latestEpisodes = _ref.latestEpisodes,\n      allEpisodes = _ref.allEpisodes;\n  return /*#__PURE__*/_jsxDEV(ContainerHome, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\xFAltimos episodios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LatestEpisodes, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: latestEpisodes.map(function (episode) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(Image, {\n              objectFit: \"cover\",\n              width: 192,\n              height: 192,\n              src: episode.thumbnail,\n              alt: episode.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"episodeDetails\",\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"\",\n                children: episode.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: episode.members\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: episode.publishedAt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: episode.durationAsString\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 21\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"./play-green.svg\",\n                alt: \"Tocar Epis\\xF3dio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 21\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 19\n            }, _this)]\n          }, episode.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AllEpisodes, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n} //com \"const NomeDaFunção: Tipagem = () => {}\" conseguimos tipar os parametros da função e seu retorno\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/sindyme/Área de Trabalho/mypodcast_nlw05/src/pages/index.tsx"],"names":["Image","ContainerHome","LatestEpisodes","AllEpisodes","Home","latestEpisodes","allEpisodes","map","episode","thumbnail","title","members","publishedAt","durationAsString","id"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,YAAlB;AAOA,SAAQC,aAAR,EAAuBC,cAAvB,EAAuCC,WAAvC,QAAyD,cAAzD;;AAmBA,eAAe,SAASC,IAAT,OAAwD;AAAA;;AAAA,MAAzCC,cAAyC,QAAzCA,cAAyC;AAAA,MAAzBC,WAAyB,QAAzBA,WAAyB;AAErE,sBACE,QAAC,aAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,cAAD;AAAA,6BACE;AAAA,kBAGID,cAAc,CAACE,GAAf,CAAmB,UAAAC,OAAO,EAAI;AAC5B,8BACE;AAAA,oCACE,QAAC,KAAD;AACE,cAAA,SAAS,EAAC,OADZ;AAEE,cAAA,KAAK,EAAE,GAFT;AAGE,cAAA,MAAM,EAAE,GAHV;AAIE,cAAA,GAAG,EAAEA,OAAO,CAACC,SAJf;AAI0B,cAAA,GAAG,EAAED,OAAO,CAACE;AAJvC;AAAA;AAAA;AAAA;AAAA,qBADF,eAOE;AAAK,cAAA,SAAS,EAAC,gBAAf;AAAA,sCACE;AAAG,gBAAA,IAAI,EAAC,EAAR;AAAA,0BAAYF,OAAO,CAACE;AAApB;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE;AAAA,0BAAIF,OAAO,CAACG;AAAZ;AAAA;AAAA;AAAA;AAAA,uBAFF,eAGE;AAAA,0BAAOH,OAAO,CAACI;AAAf;AAAA;AAAA;AAAA;AAAA,uBAHF,eAIE;AAAA,0BAAOJ,OAAO,CAACK;AAAf;AAAA;AAAA;AAAA;AAAA,uBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,qBAPF,eAcE;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAA,qCACE;AAAK,gBAAA,GAAG,EAAC,kBAAT;AAA4B,gBAAA,GAAG,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,qBAdF;AAAA,aAASL,OAAO,CAACM,EAAjB;AAAA;AAAA;AAAA;AAAA,mBADF;AAsBD,SAvBD;AAHJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAmCE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAnCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyCD,C,CAED;;KA7CwBV,I","sourcesContent":["import {GetStaticProps} from 'next';\nimport Image from 'next/image'\n\nimport { format, parseISO } from 'date-fns'\nimport ptBR from 'date-fns/locale/pt-BR'\nimport { api } from '../services/api';\n\nimport { convertDurationToTimeString } from '../utils/convertDurationToTimeString';\nimport {ContainerHome, LatestEpisodes, AllEpisodes} from './stylesHome'\n\n\ninterface Episode  {\n  id: string;     \n  title: string;\n  members: string;\n  publishedAt: string;\n  thumbnail: string;\n  duration: number;\n  description: string;\n  url: string;\n  durationAsString: string;\n}\ninterface HomeProps  {\n  latestEpisodes: Array<Episode>;\n  allEpisodes: Array<Episode>;\n}\n\nexport default function Home({latestEpisodes, allEpisodes}: HomeProps) {\n  \n  return (\n    <ContainerHome>\n      <h2>últimos episodios</h2>\n      <LatestEpisodes>\n        <ul>\n\n          {\n            latestEpisodes.map(episode => {\n              return (\n                <li key={episode.id}>\n                  <Image \n                    objectFit=\"cover\"\n                    width={192} \n                    height={192} \n                    src={episode.thumbnail} alt={episode.title}/>\n\n                  <div className=\"episodeDetails\">\n                    <a href=\"\">{episode.title}</a>\n                    <p>{episode.members}</p>\n                    <span>{episode.publishedAt}</span>\n                    <span>{episode.durationAsString}</span>\n                  </div>\n\n                  <button type=\"button\">\n                    <img src=\"./play-green.svg\" alt=\"Tocar Episódio\"/>\n\n                  </button>\n\n                </li>\n              )\n            })\n          }\n        </ul>\n\n      </LatestEpisodes>\n\n      <AllEpisodes>\n\n      </AllEpisodes>\n    </ContainerHome>\n  )\n}\n\n//com \"const NomeDaFunção: Tipagem = () => {}\" conseguimos tipar os parametros da função e seu retorno\nexport const getStaticProps: GetStaticProps = async() =>  {\n  const {data} = await api.get('episodes', {\n    params: {\n      _limit: 12,\n      _sort: 'published_at',\n      _order: 'desc'\n    }\n  });\n\n  const episodes = data.map(episode => {\n    return {\n      id: episode.id,      \n      title: episode.title,\n      members: episode.members,\n      publishedAt: format(parseISO(episode.published_at), 'd MMM yy', {locale: ptBR}),\n      thumbnail: episode.thumbnail,\n      duration: Number(episode.file.duration),\n      description: episode.description,\n      url: episode.file.url,\n      durationAsString: convertDurationToTimeString(Number(episode.file.duration))\n    }\n  })\n\n  const latestEpisodes = episodes.slice(0, 2);\n  const allEpisodes = episodes.slice(2, episodes.length)\n  \n  return {\n    props: {\n      latestEpisodes, \n      allEpisodes\n    },\n    revalidate: 60*60*8,\n  }\n  \n}"]},"metadata":{},"sourceType":"module"}