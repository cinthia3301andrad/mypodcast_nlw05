{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/sindyme/\\xC1rea de Trabalho/mypodcast_nlw05/src/pages/episodes/[slug].tsx\";\nimport { format, parseISO } from 'date-fns';\nimport { ptBR } from 'date-fns/locale';\nimport { api } from '../../services/api';\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\nimport { ContainerEpisode } from './styles';\nexport default function Episode({\n  episode\n}) {\n  console.log(episode);\n  return /*#__PURE__*/_jsxDEV(ContainerEpisode, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"containerThumber\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"./arrow-left.svg\",\n          alt: \"voltar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\nexport const getStaticPaths = async () => {\n  return {\n    paths: [],\n    fallback: \"blocking\"\n  };\n};\nexport const getStaticProps = async ctx => {\n  const {\n    slug\n  } = ctx.params;\n  const {\n    data\n  } = await api.get(`/episodes/${slug}`);\n  const episode = {\n    id: data.id,\n    title: data.title,\n    members: data.members,\n    publishedAt: format(parseISO(data.published_at), 'd MMM yy', {\n      locale: ptBR\n    }),\n    thumbnail: data.thumbnail,\n    duration: Number(data.file.duration),\n    description: data.description,\n    url: data.file.url,\n    durationAsString: convertDurationToTimeString(Number(data.file.duration))\n  };\n  return {\n    props: {\n      episode\n    },\n    revalidate: 60 * 60 * 24\n  };\n};","map":{"version":3,"sources":["/home/sindyme/√Årea de Trabalho/mypodcast_nlw05/src/pages/episodes/[slug].tsx"],"names":["format","parseISO","ptBR","api","convertDurationToTimeString","ContainerEpisode","Episode","episode","console","log","getStaticPaths","paths","fallback","getStaticProps","ctx","slug","params","data","get","id","title","members","publishedAt","published_at","locale","thumbnail","duration","Number","file","description","url","durationAsString","props","revalidate"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,UAAjC;AACA,SAASC,IAAT,QAAqB,iBAArB;AAKA,SAASC,GAAT,QAAoB,oBAApB;AACA,SAASC,2BAAT,QAA4C,yCAA5C;AACA,SAAQC,gBAAR,QAA+B,UAA/B;AAiBA,eAAe,SAASC,OAAT,CAAiB;AAACC,EAAAA;AAAD,CAAjB,EAAyC;AACpDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,sBACI,QAAC,gBAAD;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,6BACI;AAAA,+BACI;AAAK,UAAA,GAAG,EAAC,kBAAT;AAA4B,UAAA,GAAG,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;AAED,OAAO,MAAMG,cAA8B,GAAG,YAAY;AACtD,SAAM;AACFC,IAAAA,KAAK,EAAE,EADL;AAEFC,IAAAA,QAAQ,EAAE;AAFR,GAAN;AAIH,CALM;AAMP,OAAO,MAAMC,cAA8B,GAAG,MAAMC,GAAN,IAAe;AACzD,QAAM;AAACC,IAAAA;AAAD,MAASD,GAAG,CAACE,MAAnB;AAEA,QAAM;AAACC,IAAAA;AAAD,MAAS,MAAMd,GAAG,CAACe,GAAJ,CAAS,aAAYH,IAAK,EAA1B,CAArB;AAEA,QAAMR,OAAO,GACb;AACIY,IAAAA,EAAE,EAAEF,IAAI,CAACE,EADb;AAEIC,IAAAA,KAAK,EAAEH,IAAI,CAACG,KAFhB;AAGIC,IAAAA,OAAO,EAAEJ,IAAI,CAACI,OAHlB;AAIIC,IAAAA,WAAW,EAAEtB,MAAM,CAACC,QAAQ,CAACgB,IAAI,CAACM,YAAN,CAAT,EAA8B,UAA9B,EAA0C;AAACC,MAAAA,MAAM,EAAEtB;AAAT,KAA1C,CAJvB;AAKIuB,IAAAA,SAAS,EAAER,IAAI,CAACQ,SALpB;AAMIC,IAAAA,QAAQ,EAAEC,MAAM,CAACV,IAAI,CAACW,IAAL,CAAUF,QAAX,CANpB;AAOIG,IAAAA,WAAW,EAAEZ,IAAI,CAACY,WAPtB;AAQIC,IAAAA,GAAG,EAAEb,IAAI,CAACW,IAAL,CAAUE,GARnB;AASIC,IAAAA,gBAAgB,EAAE3B,2BAA2B,CAACuB,MAAM,CAACV,IAAI,CAACW,IAAL,CAAUF,QAAX,CAAP;AATjD,GADA;AAcA,SAAO;AACHM,IAAAA,KAAK,EAAE;AACHzB,MAAAA;AADG,KADJ;AAIH0B,IAAAA,UAAU,EAAE,KAAG,EAAH,GAAM;AAJf,GAAP;AAMH,CAzBM","sourcesContent":["import { format, parseISO } from 'date-fns';\nimport { ptBR } from 'date-fns/locale';\nimport { GetStaticPaths, GetStaticProps } from 'next';\nimport Image from 'next/image'\n\nimport {useRouter}  from 'next/router'\nimport { api } from '../../services/api';\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\nimport {ContainerEpisode} from './styles';\n\n\ntype Episode =  {\n    id: string;     \n    title: string;\n    members: string;\n    publishedAt: string;\n    thumbnail: string;\n    duration: number;\n    url: string;\n    durationAsString: string;\n  }\ntype EpisodeProps = {\n    episode: Episode\n  }\n\nexport default function Episode({episode}:EpisodeProps) {\n    console.log(episode)\n    return (\n        <ContainerEpisode>\n            <div className=\"containerThumber\">\n                <button> \n                    <img src=\"./arrow-left.svg\" alt=\"voltar\"/>\n\n                </button>\n\n            </div>\n        </ContainerEpisode>\n\n    );\n}\n\nexport const getStaticPaths: GetStaticPaths = async () => {\n    return{\n        paths: [],\n        fallback: \"blocking\"\n    }\n}\nexport const getStaticProps: GetStaticProps = async(ctx) =>  {\n    const {slug} = ctx.params;\n\n    const {data} = await api.get(`/episodes/${slug}`)\n\n    const episode = \n    {\n        id: data.id,      \n        title: data.title,\n        members: data.members,\n        publishedAt: format(parseISO(data.published_at), 'd MMM yy', {locale: ptBR}),\n        thumbnail: data.thumbnail,\n        duration: Number(data.file.duration),\n        description: data.description,\n        url: data.file.url,\n        durationAsString: convertDurationToTimeString(Number(data.file.duration))\n      }\n\n\n    return {\n        props: {\n            episode,\n        },\n        revalidate: 60*60*24\n    }\n}"]},"metadata":{},"sourceType":"module"}