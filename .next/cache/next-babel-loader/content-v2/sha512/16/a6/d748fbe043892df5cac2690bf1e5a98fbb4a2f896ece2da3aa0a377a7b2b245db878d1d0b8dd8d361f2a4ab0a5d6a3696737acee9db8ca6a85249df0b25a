{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport Image from \"next/image\";\nimport { useContext, useEffect, useRef, useState } from \"react\";\nimport Slider from \"rc-slider\";\nimport \"rc-slider/assets/index.css\";\nimport { PlayerContext } from \"../../contexts/PlayerContext\";\nimport { ContainerEpisode, EmptyPlayer, CurrentEpisode, Footer } from \"./styles\";\nimport { convertDurationToTimeString } from \"../../utils/convertDurationToTimeString\";\nexport function Player() {\n  var _episode$duration;\n\n  var audioRef = useRef(null);\n\n  var _useState = useState(0),\n      progress = _useState[0],\n      setProgress = _useState[1];\n\n  var _useContext = useContext(PlayerContext),\n      episodeList = _useContext.episodeList,\n      currentEpisodeIndex = _useContext.currentEpisodeIndex,\n      isPlaying = _useContext.isPlaying,\n      togglePlay = _useContext.togglePlay,\n      setPlayingState = _useContext.setPlayingState,\n      playNext = _useContext.playNext,\n      playPrevious = _useContext.playPrevious,\n      hasNext = _useContext.hasNext,\n      hasPrevious = _useContext.hasPrevious,\n      isLooping = _useContext.isLooping,\n      toggleLoop = _useContext.toggleLoop,\n      isShuffling = _useContext.isShuffling,\n      toggleShuffle = _useContext.toggleShuffle,\n      clearPlayerState = _useContext.clearPlayerState;\n\n  var episode = episodeList[currentEpisodeIndex];\n\n  function setupProgressListener() {\n    audioRef.current.currentTime = 0;\n    audioRef.current.addEventListener(\"timeupdate\", function () {\n      setProgress(Math.floor(audioRef.current.currentTime));\n    });\n  }\n\n  function handleSeek(amount) {\n    audioRef.current.currentTime = amount;\n    setProgress(amount);\n  }\n\n  function handleEpisodeEnded() {\n    if (hasNext) {\n      playNext();\n    } else {\n      clearPlayerState();\n    }\n  }\n\n  useEffect(function () {\n    if (!audioRef.current) {\n      return;\n    }\n\n    if (isPlaying) {\n      audioRef.current.play();\n    } else {\n      audioRef.current.pause();\n    }\n  }, [isPlaying]);\n  return /*#__PURE__*/_jsxs(ContainerEpisode, {\n    children: [/*#__PURE__*/_jsxs(\"header\", {\n      children: [/*#__PURE__*/_jsx(\"img\", {\n        src: \"/playing1.svg\",\n        alt: \"tocando agora\"\n      }), /*#__PURE__*/_jsx(\"strong\", {\n        children: \"Tocando agora \"\n      })]\n    }), episode ? /*#__PURE__*/_jsxs(CurrentEpisode, {\n      children: [/*#__PURE__*/_jsx(Image, {\n        width: 500,\n        height: 500,\n        src: episode.thumbnail,\n        objectFit: \"cover\"\n      }), /*#__PURE__*/_jsx(\"strong\", {\n        children: episode.title\n      }), /*#__PURE__*/_jsx(\"span\", {\n        children: episode.members\n      })]\n    }) : /*#__PURE__*/_jsx(EmptyPlayer, {\n      children: /*#__PURE__*/_jsx(\"strong\", {\n        children: \"Selecione um podcast para ouvir\"\n      })\n    }), /*#__PURE__*/_jsxs(Footer, {\n      empty: !episode ? true : false,\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: \"progress\",\n        children: [/*#__PURE__*/_jsx(\"span\", {\n          children: convertDurationToTimeString(progress)\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"slider\",\n          children: episode ? /*#__PURE__*/_jsx(Slider, {\n            onChange: handleSeek,\n            max: episode.duration,\n            value: progress,\n            trackStyle: {\n              backgroundColor: \"#rgba(255,193,69,0.84)\"\n            },\n            railStyle: {\n              backgroundColor: \"#9f75ff\"\n            },\n            handleStyle: {\n              borderColor: \"#rgba(255,193,69,0.84)\",\n              borderWidth: 4\n            }\n          }) : /*#__PURE__*/_jsx(\"div\", {\n            className: \"emptySlider\"\n          })\n        }), /*#__PURE__*/_jsx(\"span\", {\n          children: convertDurationToTimeString((_episode$duration = episode === null || episode === void 0 ? void 0 : episode.duration) !== null && _episode$duration !== void 0 ? _episode$duration : 0)\n        })]\n      }), episode && /*#__PURE__*/_jsx(_Fragment, {\n        children: /*#__PURE__*/_jsx(\"audio\", {\n          onEnded: handleEpisodeEnded,\n          ref: audioRef,\n          src: episode.url,\n          autoPlay: true,\n          loop: isLooping,\n          onPlay: function onPlay() {\n            return setPlayingState(true);\n          },\n          onPause: function onPause() {\n            return setPlayingState(false);\n          },\n          onLoadedMetadata: setupProgressListener\n        })\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsx(\"button\", {\n          type: \"button\",\n          disabled: !episode || episodeList.length === 1,\n          onClick: toggleShuffle,\n          className: isShuffling ? \"isActiveRepete\" : \"\",\n          children: /*#__PURE__*/_jsx(\"img\", {\n            src: \"/shuffle.svg\",\n            alt: \"embaralhar\"\n          })\n        }), /*#__PURE__*/_jsx(\"button\", {\n          type: \"button\",\n          disabled: !episode || !hasPrevious,\n          children: /*#__PURE__*/_jsx(\"img\", {\n            src: \"/play-previous.svg\",\n            alt: \"Tocar anterior\",\n            onClick: playPrevious\n          })\n        }), /*#__PURE__*/_jsx(\"button\", {\n          type: \"button\",\n          className: \"playButton\",\n          onClick: togglePlay,\n          disabled: !episode,\n          children: isPlaying ? /*#__PURE__*/_jsx(\"img\", {\n            src: \"/pause.svg\",\n            alt: \"Pause\"\n          }) : /*#__PURE__*/_jsx(\"img\", {\n            src: \"/play.svg\",\n            alt: \"Tocar\"\n          })\n        }), /*#__PURE__*/_jsx(\"button\", {\n          type: \"button\",\n          disabled: !episode || !hasNext,\n          children: /*#__PURE__*/_jsx(\"img\", {\n            src: \"/play-next.svg\",\n            alt: \"Tocar pr\\xF3xima\",\n            onClick: playNext\n          })\n        }), /*#__PURE__*/_jsx(\"button\", {\n          className: isLooping ? \"isActiveRepete\" : \"\",\n          type: \"button\",\n          disabled: !episode,\n          onClick: toggleLoop,\n          children: /*#__PURE__*/_jsx(\"img\", {\n            src: \"/repeat.svg\",\n            alt: \"Repetir\"\n          })\n        })]\n      })]\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}