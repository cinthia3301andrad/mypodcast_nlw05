{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/sindyme/\\xC1rea de Trabalho/mypodcast_nlw05/src/contexts/PlayerContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nexport var PlayerContext = /*#__PURE__*/createContext({});\nexport function PlayerContextProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState([]),\n      episodeList = _useState[0],\n      setEpisodeList = _useState[1];\n\n  var _useState2 = useState(0),\n      currentEpisodeIndex = _useState2[0],\n      setCurrentEpisodeIndex = _useState2[1];\n\n  var _useState3 = useState(false),\n      isPlaying = _useState3[0],\n      setIsPlaying = _useState3[1];\n\n  function play(episode) {\n    setEpisodeList([episode]);\n    setCurrentEpisodeIndex(0);\n    setIsPlaying(true);\n  }\n\n  function togglePlay() {\n    setIsPlaying(!isPlaying);\n  }\n\n  function setPlayingState(state) {\n    setIsPlaying(state);\n  }\n\n  return /*#__PURE__*/_jsxDEV(PlayerContext.Provider, {\n    value: {\n      episodeList: episodeList,\n      currentEpisodeIndex: currentEpisodeIndex,\n      play: play,\n      isPlaying: isPlaying,\n      togglePlay: togglePlay,\n      setPlayingState: setPlayingState\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PlayerContextProvider, \"LrQXJ4YCuKXOoMsmvRtpeyylJ9U=\");\n\n_c = PlayerContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayerContextProvider\");","map":{"version":3,"sources":["/home/sindyme/√Årea de Trabalho/mypodcast_nlw05/src/contexts/PlayerContext.tsx"],"names":["createContext","useState","PlayerContext","PlayerContextProvider","children","episodeList","setEpisodeList","currentEpisodeIndex","setCurrentEpisodeIndex","isPlaying","setIsPlaying","play","episode","togglePlay","setPlayingState","state"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;AAmBA,OAAO,IAAMC,aAAa,gBAAGF,aAAa,CAAC,EAAD,CAAnC;AAEP,OAAO,SAASG,qBAAT,OAA6C;AAAA;;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AAAA,kBACZH,QAAQ,CAAC,EAAD,CADI;AAAA,MAC3CI,WAD2C;AAAA,MAC9BC,cAD8B;;AAAA,mBAEIL,QAAQ,CAAC,CAAD,CAFZ;AAAA,MAE3CM,mBAF2C;AAAA,MAEtBC,sBAFsB;;AAAA,mBAGhBP,QAAQ,CAAC,KAAD,CAHQ;AAAA,MAG3CQ,SAH2C;AAAA,MAGhCC,YAHgC;;AAKlD,WAASC,IAAT,CAAcC,OAAd,EAAuB;AACrBN,IAAAA,cAAc,CAAC,CAACM,OAAD,CAAD,CAAd;AACAJ,IAAAA,sBAAsB,CAAC,CAAD,CAAtB;AACAE,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;;AAED,WAASG,UAAT,GAAsB;AACpBH,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD;;AAED,WAASK,eAAT,CAAyBC,KAAzB,EAAyC;AACvCL,IAAAA,YAAY,CAACK,KAAD,CAAZ;AACD;;AAED,sBACE,QAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLV,MAAAA,WAAW,EAAXA,WADK;AAELE,MAAAA,mBAAmB,EAAnBA,mBAFK;AAGLI,MAAAA,IAAI,EAAJA,IAHK;AAILF,MAAAA,SAAS,EAATA,SAJK;AAKLI,MAAAA,UAAU,EAAVA,UALK;AAMLC,MAAAA,eAAe,EAAfA;AANK,KADT;AAAA,cAUGV;AAVH;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAjCeD,qB;;KAAAA,qB","sourcesContent":["import { createContext, useState } from \"react\";\n\ninterface Episode {\n  title: string;\n  members: string;\n  thumbnail: string;\n  duration: number;\n  url: string;\n}\n\ninterface PlayerContextData {\n  episodeList: Array<Episode>;\n  currentEpisodeIndex: number;\n  isPlaying: boolean;\n  play: (episode: Episode) => void;\n  setPlayingState: (state: boolean) => void;\n  togglePlay: () => void;\n}\n\nexport const PlayerContext = createContext({} as PlayerContextData);\n\nexport function PlayerContextProvider({ children }) {\n  const [episodeList, setEpisodeList] = useState([]);\n  const [currentEpisodeIndex, setCurrentEpisodeIndex] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  function play(episode) {\n    setEpisodeList([episode]);\n    setCurrentEpisodeIndex(0);\n    setIsPlaying(true);\n  }\n\n  function togglePlay() {\n    setIsPlaying(!isPlaying);\n  }\n\n  function setPlayingState(state: boolean) {\n    setIsPlaying(state);\n  }\n\n  return (\n    <PlayerContext.Provider\n      value={{\n        episodeList,\n        currentEpisodeIndex,\n        play,\n        isPlaying,\n        togglePlay,\n        setPlayingState,\n      }}\n    >\n      {children}\n    </PlayerContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}