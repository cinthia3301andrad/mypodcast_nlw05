{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/sindyme/\\xC1rea de Trabalho/mypodcast_nlw05/src/pages/index.tsx\";\nimport { format, parseISO } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport { api } from '../services/api';\nexport default function Home(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.episodes[0].members\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n} //com \"const NomeDaFunção: Tipagem = () => {}\" conseguimos tipar os parametros da função e seu retorno\n\nexport const getStaticProps = async () => {\n  const {\n    data\n  } = await api.get('episodes', {\n    params: {\n      _limit: 12,\n      _sort: 'published_at',\n      _order: 'desc'\n    }\n  });\n  const episodes = data.map(episode => {\n    return {\n      id: episode.id,\n      title: episode.title,\n      members: episode.members,\n      published_at: format(parseISO(episode.published_at), 'd MMM yy', {\n        locale: ptBR\n      }),\n      thumbnail: episode.thumbnail,\n      file: {\n        url: episode.file.url,\n        type: episode.file.type,\n        duration: episode.file.duration\n      }\n    };\n  });\n  return {\n    props: {\n      episodes: data\n    },\n    revalidate: 60 * 60 * 8\n  };\n};","map":{"version":3,"sources":["/home/sindyme/Área de Trabalho/mypodcast_nlw05/src/pages/index.tsx"],"names":["format","parseISO","ptBR","api","Home","props","episodes","members","getStaticProps","data","get","params","_limit","_sort","_order","map","episode","id","title","published_at","locale","thumbnail","file","url","type","duration","revalidate"],"mappings":";;AAEA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,UAAjC;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SAASC,GAAT,QAAoB,iBAApB;AAYA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAgC;AAE7C,sBACE;AAAA,cACCA,KAAK,CAACC,QAAN,CAAe,CAAf,EAAkBC;AADnB;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,C,CAED;;AACA,OAAO,MAAMC,cAA8B,GAAG,YAAY;AACxD,QAAM;AAACC,IAAAA;AAAD,MAAS,MAAMN,GAAG,CAACO,GAAJ,CAAQ,UAAR,EAAoB;AACvCC,IAAAA,MAAM,EAAE;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,KAAK,EAAE,cAFD;AAGNC,MAAAA,MAAM,EAAE;AAHF;AAD+B,GAApB,CAArB;AAQA,QAAMR,QAAQ,GAAGG,IAAI,CAACM,GAAL,CAASC,OAAO,IAAI;AACnC,WAAO;AACLC,MAAAA,EAAE,EAAED,OAAO,CAACC,EADP;AAELC,MAAAA,KAAK,EAAEF,OAAO,CAACE,KAFV;AAGLX,MAAAA,OAAO,EAAES,OAAO,CAACT,OAHZ;AAILY,MAAAA,YAAY,EAAEnB,MAAM,CAACC,QAAQ,CAACe,OAAO,CAACG,YAAT,CAAT,EAAiC,UAAjC,EAA6C;AAACC,QAAAA,MAAM,EAAElB;AAAT,OAA7C,CAJf;AAKLmB,MAAAA,SAAS,EAAEL,OAAO,CAACK,SALd;AAMLC,MAAAA,IAAI,EAAE;AACJC,QAAAA,GAAG,EAAEP,OAAO,CAACM,IAAR,CAAaC,GADd;AAEJC,QAAAA,IAAI,EAAER,OAAO,CAACM,IAAR,CAAaE,IAFf;AAGJC,QAAAA,QAAQ,EAAET,OAAO,CAACM,IAAR,CAAaG;AAHnB;AAND,KAAP;AAYD,GAbgB,CAAjB;AAeA,SAAO;AACLpB,IAAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAEG;AADL,KADF;AAILiB,IAAAA,UAAU,EAAE,KAAG,EAAH,GAAM;AAJb,GAAP;AAOD,CA/BM","sourcesContent":["import {GetStaticProps} from 'next';\n\nimport { format, parseISO } from 'date-fns'\nimport ptBR from 'date-fns/locale/pt-BR'\nimport { api } from '../services/api';\n\n\ninterface Episode  {\n  id: string;\n  title: string;\n  members: string;\n}\ninterface HomeProps  {\n  episodes: Array<Episode>;\n}\n\nexport default function Home(props: HomeProps) {\n  \n  return (\n    <div>\n    {props.episodes[0].members}\n     \n    </div>\n  )\n}\n\n//com \"const NomeDaFunção: Tipagem = () => {}\" conseguimos tipar os parametros da função e seu retorno\nexport const getStaticProps: GetStaticProps = async() =>  {\n  const {data} = await api.get('episodes', {\n    params: {\n      _limit: 12,\n      _sort: 'published_at',\n      _order: 'desc'\n    }\n  });\n\n  const episodes = data.map(episode => {\n    return {\n      id: episode.id,      \n      title: episode.title,\n      members: episode.members,\n      published_at: format(parseISO(episode.published_at), 'd MMM yy', {locale: ptBR}),\n      thumbnail: episode.thumbnail,\n      file: {\n        url: episode.file.url,\n        type: episode.file.type,\n        duration: episode.file.duration,\n      }\n    }\n  })\n  \n  return {\n    props: {\n      episodes: data,\n    },\n    revalidate: 60*60*8,\n  }\n  \n}"]},"metadata":{},"sourceType":"module"}