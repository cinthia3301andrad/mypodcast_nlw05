{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/sindyme/\\xC1rea de Trabalho/mypodcast_nlw05/src/pages/episodes/[slug].tsx\",\n    _s = $RefreshSig$();\n\nimport { useRouter } from 'next/router';\nexport var __N_SSG = true;\nexport default function Episode(_ref) {\n  _s();\n\n  var episode = _ref.episode;\n  var router = useRouter();\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: episode.title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Episode, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = Episode;\n\nvar _c;\n\n$RefreshReg$(_c, \"Episode\");","map":{"version":3,"sources":["/home/sindyme/√Årea de Trabalho/mypodcast_nlw05/src/pages/episodes/[slug].tsx"],"names":["useRouter","Episode","episode","router","title"],"mappings":";;;;;AAGA,SAAQA,SAAR,QAAyB,aAAzB;;AAkBA,eAAe,SAASC,OAAT,OAAyC;AAAA;;AAAA,MAAvBC,OAAuB,QAAvBA,OAAuB;AAEpD,MAAMC,MAAM,GAAGH,SAAS,EAAxB;AACA,sBACI;AAAA,cAAKE,OAAO,CAACE;AAAb;AAAA;AAAA;AAAA;AAAA,UADJ;AAIH;;GAPuBH,O;UAELD,S;;;KAFKC,O","sourcesContent":["import { format, parseISO } from 'date-fns';\nimport { ptBR } from 'date-fns/locale';\nimport { GetStaticProps } from 'next';\nimport {useRouter}  from 'next/router'\nimport { api } from '../../services/api';\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\n\ninterface Episode  {\n    id: string;     \n    title: string;\n    members: string;\n    publishedAt: string;\n    thumbnail: string;\n    duration: number;\n    url: string;\n    durationAsString: string;\n  }\n  interface EpisodeProps  {\n    episode: Episode\n  }\n\nexport default function Episode({episode}:EpisodeProps) {\n\n    const router = useRouter();\n    return (\n        <h1>{episode.title}</h1>\n\n    );\n}\n\nexport const getStaticProps: GetStaticProps = async(ctx) =>  {\n    const {slug} = ctx.params;\n\n    const {data} = await api.get(`/episodes/${slug}`)\n\n    const episode = \n    {\n        id: data.id,      \n        title: data.title,\n        members: data.members,\n        publishedAt: format(parseISO(data.published_at), 'd MMM yy', {locale: ptBR}),\n        thumbnail: data.thumbnail,\n        duration: Number(data.file.duration),\n        description: data.description,\n        url: data.file.url,\n        durationAsString: convertDurationToTimeString(Number(data.file.duration))\n      }\n\n\n    return {\n        props: episode,\n        revalidate: 60*60*24\n    }\n}"]},"metadata":{},"sourceType":"module"}