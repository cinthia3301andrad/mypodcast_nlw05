{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"/home/sindyme/\\xC1rea de Trabalho/mypodcast_nlw05/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/sindyme/\\xC1rea de Trabalho/mypodcast_nlw05/src/pages/_app.tsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport { ThemeProvider } from \"styled-components\";\nimport { Header } from '../components/Header/index';\nimport { GlobalStyle } from '../styles/global';\nimport { lightTheme, darkTheme } from \"../styles/Themes\";\nimport { Wrapper } from '../styles/app';\nimport { Player } from '../components/Player';\n\nfunction MyApp(_ref) {\n  _s();\n\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n\n  var _useState = useState([]),\n      videos = _useState[0],\n      setVideos = _useState[1];\n\n  var _useState2 = useState('light'),\n      theme = _useState2[0],\n      setTheme = _useState2[1];\n\n  var themeToggler = function themeToggler() {\n    theme === 'light' ? setTheme('dark') : setTheme('light');\n  };\n\n  useEffect(function () {\n    var timer = setTimeout(function () {\n      setVideos([\"nao sei\"]);\n    }, 1000);\n    return function () {\n      return clearTimeout(timer);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme === 'light' ? lightTheme : darkTheme,\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n        children: [/*#__PURE__*/_jsxDEV(\"main\", {\n          children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Player, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MyApp, \"BXYqBq1ugnhG8Wbalv/0fcmOyWc=\");\n\n_c = MyApp;\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["/home/sindyme/Área de Trabalho/mypodcast_nlw05/src/pages/_app.tsx"],"names":["React","useEffect","useState","ThemeProvider","Header","GlobalStyle","lightTheme","darkTheme","Wrapper","Player","MyApp","Component","pageProps","videos","setVideos","theme","setTheme","themeToggler","timer","setTimeout","clearTimeout"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,aAAR,QAA4B,mBAA5B;AAEA,SAAQC,MAAR,QAAqB,4BAArB;AAEA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;AACA,SAAQC,OAAR,QAAsB,eAAtB;AACA,SAASC,MAAT,QAAuB,sBAAvB;;AAGA,SAASC,KAAT,OAAyC;AAAA;;AAAA,MAAxBC,SAAwB,QAAxBA,SAAwB;AAAA,MAAbC,SAAa,QAAbA,SAAa;;AAAA,kBACXV,QAAQ,CAAC,EAAD,CADG;AAAA,MAChCW,MADgC;AAAA,MACxBC,SADwB;;AAAA,mBAEbZ,QAAQ,CAAC,OAAD,CAFK;AAAA,MAEhCa,KAFgC;AAAA,MAEzBC,QAFyB;;AAGvC,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBF,IAAAA,KAAK,KAAK,OAAV,GAAoBC,QAAQ,CAAC,MAAD,CAA5B,GAAuCA,QAAQ,CAAC,OAAD,CAA/C;AACH,GAFC;;AAGAf,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMiB,KAAK,GAAGC,UAAU,CAAC,YAAM;AAC7BL,MAAAA,SAAS,CAAC,CAAC,SAAD,CAAD,CAAT;AACD,KAFuB,EAErB,IAFqB,CAAxB;AAGA,WAAO;AAAA,aAAMM,YAAY,CAACF,KAAD,CAAlB;AAAA,KAAP;AACD,GALQ,EAKN,EALM,CAAT;AAOA,sBACE,QAAC,aAAD;AAAe,IAAA,KAAK,EAAEH,KAAK,KAAK,OAAV,GAAoBT,UAApB,GAAiCC,SAAvD;AAAA,2BACA;AAAA,8BACA,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,OAAD;AAAA,gCACE;AAAA,kCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,SAAD,oBAAeK,SAAf;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GAhCQF,K;;KAAAA,K;AAkCT,eAAeA,KAAf","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {ThemeProvider} from \"styled-components\";\n\nimport {Header} from '../components/Header/index'\n\nimport {GlobalStyle} from '../styles/global';\nimport { lightTheme, darkTheme } from \"../styles/Themes\"\nimport {Wrapper} from '../styles/app';\nimport { Player } from '../components/Player';\n\n\nfunction MyApp({ Component, pageProps }) {\n  const [videos, setVideos] = useState([]);\n  const [theme, setTheme] = useState('light');\n  const themeToggler = () => {\n    theme === 'light' ? setTheme('dark') : setTheme('light')\n}\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setVideos([\"nao sei\"]);\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, []);\n  \n  return (\n    <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n    <>\n    <GlobalStyle/>\n    <Wrapper>\n      <main>\n        <Header/>\n        <Component {...pageProps} />\n      </main>\n      <Player/>\n        \n        \n    </Wrapper>\n  </>\n  </ThemeProvider>\n   \n  )\n \n\n}\n\nexport default MyApp\n"]},"metadata":{},"sourceType":"module"}